openapi: 3.0.0
info:
  title: Drone Flight Operations API
  description: API for accessing data about drones.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/
    description: Local Development Server

paths:
  /drones:
    get:
      tags:
        - Drones
      summary: Retrieve all drones
      responses:
        "200":
          description: A list of drones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drone"
    post:
      tags:
        - Drones
      summary: Add a new drone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Drone"
      responses:
        "201":
          description: Drone created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "500":
          description: Failed to create drone
  /drones/{buno_id}:
    get:
      tags:
        - Drones
      summary: Retrieve a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to retrieve
      responses:
        "200":
          description: A drone object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
    put:
      tags:
        - Drones
      summary: Update a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Drone"
      responses:
        "200":
          description: Drone updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
    delete:
      tags:
        - Drones
      summary: Delete a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to delete
      responses:
        "200":
          description: Drone deleted successfully
        "404":
          description: Drone not found
  /routes:
    get:
      tags: 
        - Routes
      summary: Retrieve a list of all routes
      responses:
        "200":
          description: A list of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
        "500":
          description: Failed to fetch routes
    post:
      tags:
        - Routes
      summary: Add a new route
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        "201":
          description: Route added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        "500":
          description: Failed to add route
  /routes/{route_id}:
    get:
      tags:
        - Routes
      summary: Retrieve a specific route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A route object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        "404":
          description: Route not found
        "500":
          description: Failed to fetch route
    put:
      tags:
        - Routes
      summary: Update an existing route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        "200":
          description: Route updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        "404":
          description: Route not found
        "500":
          description: Failed to update route
    delete:
      tags:
        - Routes
      summary: Delete a specific route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Route deleted successfully
        "404":
          description: Route not found
        "500":
          description: Failed to delete route
  /flight_plans:  # Flight Plans paths
    get:
      tags:
        - Flight Plans  # Added tag
      summary: Retrieve a list of all flight plans
      responses:
        "200":  # Use double quotes for consistency
          description: A list of flight plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightPlan'
        "500":  # Use double quotes for consistency
          description: Failed to fetch flight plans
    post:
      tags:
        - Flight Plans  # Added tag
      summary: Add a new flight plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightPlan'
      responses:
        "201":  # Use double quotes for consistency
          description: Flight plan added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPlan'
        "500":  # Use double quotes for consistency
          description: Failed to add flight plan
  /flight_plans/{flight_plan_id}:  # Flight Plans paths
    get:
      tags:
        - Flight Plans  # Added tag
      summary: Retrieve a specific flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
      responses:
        "200":  # Use double quotes for consistency
          description: A flight plan object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPlan'
        "404":  # Use double quotes for consistency
          description: Flight plan not found
        "500":  # Use double quotes for consistency
          description: Failed to fetch flight plan
    put:
      tags:
        - Flight Plans  # Added tag
      summary: Update an existing flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightPlan'
      responses:
        "200":  # Use double quotes for consistency
          description: Flight plan updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPlan'
        "404":  # Use double quotes for consistency
          description: Flight plan not found
        "500":  # Use double quotes for consistency
          description: Failed to update flight plan
    delete:
      tags:
        - Flight Plans  # Added tag
      summary: Delete a specific flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
      responses:
        "200":  # Use double quotes for consistency
          description: Flight plan deleted successfully
        "404":  # Use double quotes for consistency
          description: Flight plan not found
        "500":  # Use double quotes for consistency