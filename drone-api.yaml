openapi: 3.0.0
info:
  title: Drone Flight Operations API
  description: API for accessing data about drones.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/
    description: Local Development Server

tags:
  - name: Drones
    description: Endpoints related to drone operations
  - name: Pilots
    description: Endpoints related to pilot operations
  - name: Routes
    description: Endpoints related to route operations
  - name: Flight Plans
    description: Endpoints related to flight plan operations

paths:
  /drones:
    get:
      tags:
        - Drones
      summary: Retrieve all drones
      responses:
        "200":
          description: A list of drones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drone"
    post:
      tags:
        - Drones
      summary: Add a new drone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Drone"
      responses:
        "201":
          description: Drone created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "500":
          description: Failed to create drone
  /drones/{buno_id}:
    get:
      tags:
        - Drones
      summary: Retrieve a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to retrieve
      responses:
        "200":
          description: A drone object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
    put:
      tags:
        - Drones
      summary: Update a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Drone"
      responses:
        "200":
          description: Drone updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
    delete:
      tags:
        - Drones
      summary: Delete a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to delete
      responses:
        "200":
          description: Drone deleted successfully
        "404":
          description: Drone not found
  /drones/{buno_id}/pilot_info:
    get:
      tags:
        - Drones
      summary: Retrieve drone and pilot information for a given BUNO_ID
      parameters:
        - in: path
          name: buno_id
          required: true
          schema:
            type: string
          description: BUNO_ID of the drone (e.g., DR-001)
      responses:
        "200":
          description: Drone and pilot information
          content:
            application/json:
              schema:
                type: object
                properties:
                  drone:
                    $ref: "#/components/schemas/Drone"
                  pilot:
                    $ref: "#/components/schemas/Pilot"
  /pilots:
    get:
      tags:
        - Pilots
      summary: Retrieve a list of all pilots
      responses:
        "200":
          description: A list of pilots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pilot"
    post:
      tags:
        - Pilots
      summary: Add a new pilot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pilot"
      responses:
        "201":
          description: Pilot created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilot"
        "500":
          description: Failed to create pilot
  /pilots/{pilot_id}:
    get:
      tags:
        - Pilots
      summary: Retrieve a pilot by ID
      parameters:
        - in: path
          name: pilot_id
          schema:
            type: string
          required: true
          description: Pilot_ID of the pilot to retrieve (e.g., PILOT-001)
      responses:
        "200":
          description: A pilot object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilot"
        "404":
          description: Pilot not found
    put:
      tags:
        - Pilots
      summary: Update a pilot by ID
      parameters:
        - in: path
          name: pilot_id
          schema:
            type: string
          required: true
          description: Pilot_ID of the pilot to update (e.g., PILOT-001)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pilot"
      responses:
        "200":
          description: Pilot updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilot"
        "404":
          description: Pilot not found
    delete:
      tags:
        - Pilots
      summary: Delete a pilot by ID
      parameters:
        - in: path
          name: pilot_id
          schema:
            type: string
          required: true
          description: Pilot_ID of the pilot to delete (e.g., PILOT-001)
      responses:
        "200":
          description: Pilot deleted successfully
        "404":
          description: Pilot not found
  /pilots/hours:
    get:
      tags:
        - Pilots
      summary: Retrieve pilots with pilot hours within the specified range
      parameters:
        - in: query
          name: min
          required: false
          schema:
            type: integer
          description: Minimum pilot hours to filter the results (e.g., 500)
        - in: query
          name: max
          required: false
          schema:
            type: integer
          description: Maximum pilot hours to filter the results (e.g., 1500)
      responses:
        "200":
          description: A list of pilots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pilot"
        "404":
          description: No pilots found with the specified criteria
        "500":
          description: Failed to retrieve pilots
  /routes:
    get:
      tags:
        - Routes
      summary: Get all routes
      responses:
        "200":
          description: A list of route objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Route"
        "500":
          description: Failed to fetch routes
  /routes/{route_id}:
    get:
      tags:
        - Routes
      summary: Get all waypoints for a given route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
          description: Route_ID of the route to retrieve (e.g., RT-001)
      responses:
        "200":
          description: A list of route objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Route"
        "404":
          description: Route not found
        "500":
          description: Failed to fetch route
    delete:
      tags:
        - Routes
      summary: Delete an existing route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
          description: Route_ID of the route to delete (e.g., RT-001)
      responses:
        "200":
          description: Route deleted
        "404":
          description: Route not found
        "500":
          description: Failed to delete route
  /routes/{route_id}/{waypoint_id}:
    get:
      tags:
        - Routes
      summary: Get a specific waypoint for a route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
          description: Route_ID of the route (e.g., RT-001)
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
          description: Waypoint_ID of the waypoint (e.g., 1)
      responses:
        "200":
          description: A waypoint object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "404":
          description: Waypoint not found
        "500":
          description: Failed to fetch waypoint
    post:
      tags:
        - Routes
      summary: Add a new waypoint to a route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
          description: Route_ID of the route (e.g., RT-001)
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
          description: Waypoint_ID of the waypoint (e.g., 1)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        "201":
          description: Waypoint added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "500":
          description: Failed to add waypoint
    put:
      tags:
        - Routes
      summary: Update an existing waypoint in a route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
          description: Route_ID of the route (e.g., RT-001)
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
          description: Waypoint_ID of the waypoint (e.g., 1)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        "200":
          description: Waypoint updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "404":
          description: Waypoint not found
        "500":
          description: Failed to update waypoint
    delete:
      tags:
        - Routes
      summary: Delete a specific waypoint for a route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
          description: Route_ID of the route (e.g., RT-001)
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
          description: Waypoint_ID of the waypoint (e.g., 1)
      responses:
        "200":
          description: Waypoint deleted
        "404":
          description: Waypoint not found
        "500":
          description: Failed to delete waypoint

  /flight_plans:
    get:
      tags:
        - Flight Plans
      summary: Retrieve a list of all flight plans
      responses:
        "200":
          description: A list of flight plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlightPlan"
        "500":
          description: Failed to fetch flight plans
    post:
      tags:
        - Flight Plans
      summary: Add a new flight plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlightPlan"
      responses:
        "201":
          description: Flight plan added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlightPlan"
        "500":
          description: Failed to add flight plan
  /flight_plans/{flight_plan_id}:
    get:
      tags:
        - Flight Plans
      summary: Retrieve a specific flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
          description: Flight_Plan_ID of the flight plan to retrieve (e.g., FP-001)
      responses:
        "200":
          description: A flight plan object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlightPlan"
        "404":
          description: Flight plan not found
        "500":
          description: Failed to fetch flight plan
    put:
      tags:
        - Flight Plans
      summary: Update an existing flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
          description: Flight_Plan_ID of the flight plan to update (e.g., FP-001)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlightPlan"
      responses:
        "200":
          description: Flight plan updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlightPlan"
        "404":
          description: Flight plan not found
        "500":
          description: Failed to update flight plan
    delete:
      tags:
        - Flight Plans
      summary: Delete a specific flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
          description: Flight_Plan_ID of the flight plan to delete (e.g., FP-001)
      responses:
        "200":
          description: Flight plan deleted successfully
        "404":
          description: Flight plan not found
        "500":
          description: Failed to delete flight plan
  /flight_plans/flight_plans_with_routes:
    get:
      tags:
        - Flight Plans
      summary: Retrieve flight plans with their associated routes
      responses:
        "200":
          description: A list of flight plans with routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlightPlanWithRoutes"
        "500":
          description: Failed to fetch flight plans with routes

components:
  schemas:
    Route:
      type: object
      properties:
        Route_ID:
          type: string
        Latitude:
          type: number
          format: float
        Longitude:
          type: number
          format: float
        Waypoint_ID:
          type: string
      required:
        - Route_ID
        - Latitude
        - Longitude
        - Waypoint_ID
      example:
        Route_ID: "RT-001"
        Latitude: 39.9526
        Longitude: -75.1652
        Waypoint_ID: "1"
    FlightPlan:
      type: object
      properties:
        Flight_Plan_ID:
          type: string
        BUNO_ID:
          type: string
        Pilot_ID:
          type: string
        Route_ID:
          type: string
        IsPlanned:
          type: boolean
        IsComplete:
          type: boolean
      required:
        - Flight_Plan_ID
        - BUNO_ID
        - Pilot_ID
        - Route_ID
        - IsPlanned
        - IsComplete
      example:
        Flight_Plan_ID: "FP-001"
        BUNO_ID: "DR-001"
        Pilot_ID: "PILOT-001"
        Route_ID: "RT-001"
        IsPlanned: true
        IsComplete: true
    FlightPlanWithRoutes:
      type: object
      properties:
        Flight_Plan_ID:
          type: string
        BUNO_ID:
          type: string
        Pilot_ID:
          type: string
        Route_ID:
          type: string
        IsPlanned:
          type: boolean
        IsComplete:
          type: boolean
        Latitude:
          type: number
          format: float
        Longitude:
          type: number
          format: float
        Waypoint_ID:
          type: string
      required:
        - Flight_Plan_ID
        - BUNO_ID
        - Pilot_ID
        - Route_ID
        - IsPlanned
        - IsComplete
        - Latitude
        - Longitude
        - Waypoint_ID
      example:
        Flight_Plan_ID: "FP-001"
        BUNO_ID: "DR-001"
        Pilot_ID: "PILOT-001"
        Route_ID: "RT-001"
        IsPlanned: true
        IsComplete: true
        Latitude: 39.9526
        Longitude: -75.1652
        Waypoint_ID: "1"
    Drone:
      type: object
      properties:
        BUNO_ID:
          type: string
        Drone_Model:
          type: string
        Manufacturer:
          type: string
        Purchase_Date:
          type: string
          format: date
        Serial:
          type: string
        Status:
          type: string
        Status_Code:
          type: string
        Altitude:
          type: number
          format: float
        Latitude:
          type: number
          format: float
        Longitude:
          type: number
          format: float
      required:
        - BUNO_ID
        - Drone_Model
        - Manufacturer
        - Purchase_Date
        - Serial
        - Status
        - Status_Code
        - Altitude
        - Latitude
        - Longitude
      example:
        BUNO_ID: "DR-001"
        Drone_Model: "Model X"
        Manufacturer: "DroneCorp"
        Purchase_Date: "2023-01-01"
        Serial: "SN123456"
        Status: "Active"
        Status_Code: "A1"
        Altitude: 5000.0
        Latitude: 34.0522
        Longitude: -118.2437
    Pilot:
      type: object
      properties:
        Pilot_ID:
          type: string
        Pilot_Current:
          type: boolean
        Pilot_Hours:
          type: integer
      required:
        - Pilot_ID
        - Pilot_Current
        - Pilot_Hours
      example:
        Pilot_ID: "PILOT-001"
        Pilot_Current: true
        Pilot_Hours: 1000
    DronePilotInfo:
      type: object
      properties:
        drone:
          $ref: "#/components/schemas/Drone"
        pilot:
          $ref: "#/components/schemas/Pilot"
      example:
        drone:
          BUNO_ID: "DR-001"
          Drone_Model: "DJI Phantom 4 Pro"
          Manufacturer: "DJI Innovations"
          Purchase_Date: "2022-05-20"
          Serial: "23456"
          Status: "Active"
          Status_Code: "OK"
          Altitude: 5000.0
          Latitude: 34.0522
          Longitude: -118.2437
        pilot:
          Pilot_ID: "PILOT-001"
          Pilot_Current: true
          Pilot_Hours: 1000

    PilotMinHours: # New schema for /pilots/min_hours/<int:min_pilot_hours>
      type: array
      items:
        $ref: "#/components/schemas/Pilot"
      example:
        - Pilot_ID: "PILOT-001"
          Pilot_Current: true
          Pilot_Hours: 1000
        - Pilot_ID: "PILOT-002"
          Pilot_Current: false
          Pilot_Hours: 1500
