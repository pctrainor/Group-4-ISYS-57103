openapi: 3.0.0
info:
  title: Drone Flight Operations API
  description: API for accessing data about drones.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/
    description: Local Development Server

paths:
  /drones:
    get:
      tags:
        - Drones
      summary: Retrieve all drones
      responses:
        "200":
          description: A list of drones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drone"
    post:
      tags:
        - Drones
      summary: Add a new drone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Drone"
      responses:
        "201":
          description: Drone created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "500":
          description: Failed to create drone
  /drones/{buno_id}:
    get:
      tags:
        - Drones
      summary: Retrieve a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to retrieve
      responses:
        "200":
          description: A drone object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
    put:
      tags:
        - Drones
      summary: Update a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Drone"
      responses:
        "200":
          description: Drone updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
    delete:
      tags:
        - Drones
      summary: Delete a drone by ID
      parameters:
        - in: path
          name: buno_id
          schema:
            type: string
          required: true
          description: BUNO_ID of the drone to delete
      responses:
        "200":
          description: Drone deleted successfully
        "404":
          description: Drone not found

  /pilots:
    get:
      tags:
        - Pilots
      summary: Retrieve a list of all pilots
      responses:
        "200":
          description: A list of pilots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pilot"
    post:
      tags:
        - Pilots
      summary: Add a new pilot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pilot"
      responses:
        "201":
          description: Pilot created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilot"
        "500":
          description: Failed to create pilot
  /pilots/{pilot_id}:
    get:
      tags:
        - Pilots
      summary: Retrieve a pilot by ID
      parameters:
        - in: path
          name: pilot_id
          schema:
            type: string
          required: true
          description: Pilot_ID of the pilot to retrieve
      responses:
        "200":
          description: A pilot object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilot"
        "404":
          description: Pilot not found
    put:
      tags:
        - Pilots
      summary: Update a pilot by ID
      parameters:
        - in: path
          name: pilot_id
          schema:
            type: string
          required: true
          description: Pilot_ID of the pilot to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pilot"
      responses:
        "200":
          description: Pilot updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilot"
        "404":
          description: Pilot not found
    delete:
      tags:
        - Pilots
      summary: Delete a pilot by ID
      parameters:
        - in: path
          name: pilot_id
          schema:
            type: string
          required: true
          description: Pilot_ID of the pilot to delete
      responses:
        "200":
          description: Pilot deleted successfully
        "404":
          description: Pilot not found

  /routes:
    get:
      tags:
        - Routes
      summary: Get all routes
      responses:
        "200":
          description: A list of route objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Route"
        "500":
          description: Failed to fetch routes
    post:
      tags:
        - Routes
      summary: Create a new route
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        "201":
          description: Route created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "400":
          description: Failed to add route
  /routes/{route_id}:
    get:
      tags:
        - Routes
      summary: Get all waypoints for a given route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of route objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Route"
        "404":
          description: Route not found
        "500":
          description: Failed to fetch route
    delete:
      tags:
        - Routes
      summary: Delete an existing route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Route deleted
        "404":
          description: Route not found
        "500":
          description: Failed to delete route
  /routes/{route_id}/{waypoint_id}:
    get:
      tags:
        - Routes
      summary: Get a specific waypoint for a route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A waypoint object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "404":
          description: Waypoint not found
        "500":
          description: Failed to fetch waypoint
    post:
      tags:
        - Routes
      summary: Add a new waypoint to a route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        "201":
          description: Waypoint added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "500":
          description: Failed to add waypoint
    put:
      tags:
        - Routes
      summary: Update an existing waypoint in a route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        "200":
          description: Waypoint updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        "404":
          description: Waypoint not found
        "500":
          description: Failed to update waypoint
    delete:
      tags:
        - Routes
      summary: Delete a specific waypoint for a route by its ID
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
        - in: path
          name: waypoint_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Waypoint deleted
        "404":
          description: Waypoint not found
        "500":
          description: Failed to delete waypoint

  /flight_plans:
    get:
      tags:
        - Flight Plans
      summary: Retrieve a list of all flight plans
      responses:
        "200":
          description: A list of flight plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlightPlan"
        "500":
          description: Failed to fetch flight plans
    post:
      tags:
        - Flight Plans
      summary: Add a new flight plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlightPlan"
      responses:
        "201":
          description: Flight plan added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlightPlan"
        "500":
          description: Failed to add flight plan
  /flight_plans/{flight_plan_id}:
    get:
      tags:
        - Flight Plans
      summary: Retrieve a specific flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A flight plan object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlightPlan"
        "404":
          description: Flight plan not found
        "500":
          description: Failed to fetch flight plan
    put:
      tags:
        - Flight Plans
      summary: Update an existing flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlightPlan"
      responses:
        "200":
          description: Flight plan updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlightPlan"
        "404":
          description: Flight plan not found
        "500":
          description: Failed to update flight plan
    delete:
      tags:
        - Flight Plans
      summary: Delete a specific flight plan by its ID
      parameters:
        - in: path
          name: flight_plan_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Flight plan deleted successfully
        "404":
          description: Flight plan not found
        "500":
          description: Failed to delete flight plan

components:
  schemas:
    Route:
      type: object
      properties:
        Route_ID:
          type: string
        Latitude:
          type: number
          format: float
        Longitude:
          type: number
          format: float
        Waypoint_ID:
          type: string
      required:
        - Route_ID
        - Latitude
        - Longitude
        - Waypoint_ID
      example:
        Route_ID: "RT-001"
        Latitude: 34.0522
        Longitude: -118.2437
        Waypoint_ID: "1"
    FlightPlan:
      type: object
      properties:
        Flight_Plan_ID:
          type: string
        BUNO_ID:
          type: string
        Pilot_ID:
          type: string
        Route_ID:
          type: string
        IsPlanned:
          type: boolean
      required:
        - Flight_Plan_ID
        - BUNO_ID
        - Pilot_ID
        - Route_ID
        - IsPlanned
      example:
        Flight_Plan_ID: "FP-001"
        BUNO_ID: "DR-001"
        Pilot_ID: "PILOT-001"
        Route_ID: "RT-001"
        IsPlanned: true
    Drone:
      type: object
      properties:
        BUNO_ID:
          type: string
        Drone_Model:
          type: string
        Manufacturer:
          type: string
        Purchase_Date:
          type: string
          format: date
        Serial:
          type: string
        Status:
          type: string
        Status_Code:
          type: string
      required:
        - BUNO_ID
        - Drone_Model
        - Manufacturer
        - Purchase_Date
        - Serial
        - Status
        - Status_Code
      example:
        BUNO_ID: "DR-001"
        Drone_Model: "Model X"
        Manufacturer: "DroneCorp"
        Purchase_Date: "2023-01-01"
        Serial: "SN123456"
        Status: "Active"
        Status_Code: "A1"
    Pilot:
      type: object
      properties:
        Pilot_ID:
          type: string
        Pilot_Current:
          type: boolean
        Pilot_Hours:
          type: integer
      required:
        - Pilot_ID
        - Pilot_Current
        - Pilot_Hours
      example:
        Pilot_ID: "PILOT-001"
        Pilot_Current: true
        Pilot_Hours: 1500
